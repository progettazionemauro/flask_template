File: app.py
from flask import Flask, render_template, request, jsonify
import sqlite3

app = Flask(__name__)
DATABASE = 'database.db'

def create_table():
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    cursor.execute('CREATE TABLE IF NOT EXISTS objects (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT)')
    conn.commit()
    conn.close()

@app.route('/')
def index():
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM objects')
    objects = cursor.fetchall()
    conn.close()
    return render_template('index.html', objects=objects)

@app.route('/add', methods=['POST'])
def add_object():
    name = request.form['name']
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    cursor.execute('INSERT INTO objects (name) VALUES (?)', (name,))
    conn.commit()
    conn.close()
    return 'Object added successfully!'

@app.route('/update/<int:object_id>', methods=['POST'])
def update_object(object_id):
    updated_data = request.get_json()
    name = updated_data['name']

    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    cursor.execute('UPDATE objects SET name=? WHERE id=?', (name, object_id))
    conn.commit()
    conn.close()

    return jsonify({'message': 'Object updated successfully'})

@app.route('/delete/<int:object_id>', methods=['POST'])
def delete_object(object_id):
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()
    cursor.execute('DELETE FROM objects WHERE id=?', (object_id,))
    conn.commit()
    conn.close()

    return jsonify({'message': 'Object deleted successfully'})

if __name__ == '__main__':
    create_table()
    app.run(port=0, debug=True)

-------OOOO------

File: templates/index.html
<!DOCTYPE html>
<html>
<head>
    <title>Create Object</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="{{ url_for('static', filename='script.js') }}"></script>
    <style>
        .update-input {
            width: 150px;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Create Object</h1>
        <form id="object-form">
            <div class="mb-3">
                <input type="text" class="form-control" id="name-input" placeholder="Name">
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
        <table class="table mt-3">
            <thead>
                <tr>
                    <th>Object Name</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="object-list">
                {% for obj in objects %}
                    <tr>
                        <td>{{ obj[1] }}</td>
                        <td>
                            <div class="d-flex align-items-center">
                                <input type="text" class="update-input form-control me-2" data-id="{{ obj[0] }}" placeholder="Update text">
                                <button class="update-btn btn btn-primary me-2" data-id="{{ obj[0] }}">Update</button>
                                <button class="delete-btn btn btn-danger" data-id="{{ obj[0] }}">Delete</button>
                            </div>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</body>
</html>

-------OOOO------

File: static/script.js

document.addEventListener('DOMContentLoaded', function() {
    // Attaches a submit event listener to the form with ID 'object-form'
    document.getElementById('object-form').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevents the default form submission behavior

        // Retrieves the value entered in the name input field
        var name = document.getElementById('name-input').value;

        // Creates a new XMLHttpRequest object
        var xhr = new XMLHttpRequest();

        // Defines the callback function to handle the AJAX response
        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    // Executes when the server responds with a successful message
                    alert(xhr.responseText); // Displays an alert with the response message
                    document.getElementById('name-input').value = ''; // Clears the name input field
                    updateObjectList(); // Updates the object list
                    setTimeout(function() {
                        location.reload(); // Refreshes the page after a delay (2 seconds)
                    }, 2000);
                }
            }
        };

        // Sends a POST request to the specified URL with the name as data
        xhr.open('POST', '/add');
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.send('name=' + encodeURIComponent(name));
    });

    // Update button click event listener
    document.addEventListener('click', function(event) {
        var target = event.target;
        if (target.classList.contains('update-btn')) {
            var objectId = target.getAttribute('data-id');
            var inputField = document.querySelector('input[data-id="' + objectId + '"]');
            var updatedText = inputField.value;

            // Send an AJAX request to the '/update' route with the updated data
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Handle the success response
                        updateObjectList(); // Update the object list
                        location.reload(); // Refresh the page
                    }
                }
            };
            xhr.open('POST', '/update/' + objectId);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.send(JSON.stringify({ text: updatedText })); // Send the updated text as JSON data
        }
    });

    // Delete button click event listener
    document.addEventListener('click', function(event) {
        var target = event.target;
        if (target.classList.contains('delete-btn')) {
            var objectId = target.getAttribute('data-id');

            // Send an AJAX request to the '/delete' route to delete the object
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        // Handle the success response
                        updateObjectList(); // Update the object list
                        location.reload(); // Refresh the page
                    }
                }
            };
            xhr.open('POST', '/delete/' + objectId);
            xhr.send();
        }
    });

    // Update the function to refresh the object list
    function updateObjectList() {
        // Retrieve the updated object list from the server using AJAX
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    // Handle the success response
                    var responseHTML = document.createElement('html');
                    responseHTML.innerHTML = xhr.responseText;

                    // Updates the content of the 'object-list' element with the response data
                    var objectList = responseHTML.querySelector('#object-list');
                    document.getElementById('object-list').innerHTML = objectList.innerHTML;
                }
            }
        };
        xhr.open('GET', '/');
        xhr.send();
    }

    // Updates the object list when the page loads
    updateObjectList();
});

-------OOOO------

